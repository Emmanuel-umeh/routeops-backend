/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { CityHallWhereUniqueInput } from "../../cityHall/base/CityHallWhereUniqueInput";
import { HazardListRelationFilter } from "../../hazard/base/HazardListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { RoutePointListRelationFilter } from "../../routePoint/base/RoutePointListRelationFilter";
import { EnumProjectStatus } from "./EnumProjectStatus";
import { SurveyListRelationFilter } from "../../survey/base/SurveyListRelationFilter";

@InputType()
class ProjectWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  assignedUser?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => CityHallWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CityHallWhereUniqueInput)
  @IsOptional()
  @Field(() => CityHallWhereUniqueInput, {
    nullable: true,
  })
  cityHall?: CityHallWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  createdBy?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => HazardListRelationFilter,
  })
  @ValidateNested()
  @Type(() => HazardListRelationFilter)
  @IsOptional()
  @Field(() => HazardListRelationFilter, {
    nullable: true,
  })
  hazards?: HazardListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => RoutePointListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RoutePointListRelationFilter)
  @IsOptional()
  @Field(() => RoutePointListRelationFilter, {
    nullable: true,
  })
  routePoints?: RoutePointListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumProjectStatus,
  })
  @IsEnum(EnumProjectStatus)
  @IsOptional()
  @Field(() => EnumProjectStatus, {
    nullable: true,
  })
  status?: "Option1";

  @ApiProperty({
    required: false,
    type: () => SurveyListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SurveyListRelationFilter)
  @IsOptional()
  @Field(() => SurveyListRelationFilter, {
    nullable: true,
  })
  surveys?: SurveyListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  videoUrl?: StringNullableFilter;
}

export { ProjectWhereInput as ProjectWhereInput };
