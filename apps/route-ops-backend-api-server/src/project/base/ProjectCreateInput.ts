/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { CityHallWhereUniqueInput } from "../../cityHall/base/CityHallWhereUniqueInput";
import { Type } from "class-transformer";
import { HazardCreateNestedManyWithoutProjectsInput } from "./HazardCreateNestedManyWithoutProjectsInput";
import { RoutePointCreateNestedManyWithoutProjectsInput } from "./RoutePointCreateNestedManyWithoutProjectsInput";
import { EnumProjectStatus } from "./EnumProjectStatus";
import { SurveyCreateNestedManyWithoutProjectsInput } from "./SurveyCreateNestedManyWithoutProjectsInput";

@InputType()
class ProjectCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  assignedUser?: string | null;

  @ApiProperty({
    required: false,
    type: () => CityHallWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CityHallWhereUniqueInput)
  @IsOptional()
  @Field(() => CityHallWhereUniqueInput, {
    nullable: true,
  })
  cityHall?: CityHallWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  createdBy?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => HazardCreateNestedManyWithoutProjectsInput,
  })
  @ValidateNested()
  @Type(() => HazardCreateNestedManyWithoutProjectsInput)
  @IsOptional()
  @Field(() => HazardCreateNestedManyWithoutProjectsInput, {
    nullable: true,
  })
  hazards?: HazardCreateNestedManyWithoutProjectsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => RoutePointCreateNestedManyWithoutProjectsInput,
  })
  @ValidateNested()
  @Type(() => RoutePointCreateNestedManyWithoutProjectsInput)
  @IsOptional()
  @Field(() => RoutePointCreateNestedManyWithoutProjectsInput, {
    nullable: true,
  })
  routePoints?: RoutePointCreateNestedManyWithoutProjectsInput;

  @ApiProperty({
    required: false,
    enum: EnumProjectStatus,
  })
  @IsEnum(EnumProjectStatus)
  @IsOptional()
  @Field(() => EnumProjectStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => SurveyCreateNestedManyWithoutProjectsInput,
  })
  @ValidateNested()
  @Type(() => SurveyCreateNestedManyWithoutProjectsInput)
  @IsOptional()
  @Field(() => SurveyCreateNestedManyWithoutProjectsInput, {
    nullable: true,
  })
  surveys?: SurveyCreateNestedManyWithoutProjectsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  videoUrl?: string | null;
}

export { ProjectCreateInput as ProjectCreateInput };
