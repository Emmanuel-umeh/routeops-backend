/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { CityHallWhereUniqueInput } from "../../cityHall/base/CityHallWhereUniqueInput";
import { Type } from "class-transformer";
import { HazardUpdateManyWithoutProjectsInput } from "./HazardUpdateManyWithoutProjectsInput";
import { RoutePointUpdateManyWithoutProjectsInput } from "./RoutePointUpdateManyWithoutProjectsInput";
import { EnumProjectStatus } from "./EnumProjectStatus";
import { SurveyUpdateManyWithoutProjectsInput } from "./SurveyUpdateManyWithoutProjectsInput";

@InputType()
class ProjectUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  assignedUser?: string | null;

  @ApiProperty({
    required: false,
    type: () => CityHallWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CityHallWhereUniqueInput)
  @IsOptional()
  @Field(() => CityHallWhereUniqueInput, {
    nullable: true,
  })
  cityHall?: CityHallWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  createdBy?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => HazardUpdateManyWithoutProjectsInput,
  })
  @ValidateNested()
  @Type(() => HazardUpdateManyWithoutProjectsInput)
  @IsOptional()
  @Field(() => HazardUpdateManyWithoutProjectsInput, {
    nullable: true,
  })
  hazards?: HazardUpdateManyWithoutProjectsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => RoutePointUpdateManyWithoutProjectsInput,
  })
  @ValidateNested()
  @Type(() => RoutePointUpdateManyWithoutProjectsInput)
  @IsOptional()
  @Field(() => RoutePointUpdateManyWithoutProjectsInput, {
    nullable: true,
  })
  routePoints?: RoutePointUpdateManyWithoutProjectsInput;

  @ApiProperty({
    required: false,
    enum: EnumProjectStatus,
  })
  @IsEnum(EnumProjectStatus)
  @IsOptional()
  @Field(() => EnumProjectStatus, {
    nullable: true,
  })
  status?: "active" | "inactive" | "completed" | "pending" | null;

  @ApiProperty({
    required: false,
    type: () => SurveyUpdateManyWithoutProjectsInput,
  })
  @ValidateNested()
  @Type(() => SurveyUpdateManyWithoutProjectsInput)
  @IsOptional()
  @Field(() => SurveyUpdateManyWithoutProjectsInput, {
    nullable: true,
  })
  surveys?: SurveyUpdateManyWithoutProjectsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  videoUrl?: string | null;
}

export { ProjectUpdateInput as ProjectUpdateInput };
